//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaEventWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaEvent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("ToCallLuaFunc", ToCallLuaFunc);
		L.RegFunction("AddAwake", AddAwake);
		L.RegFunction("RemoveAwake", RemoveAwake);
		L.RegFunction("AddOnEnable", AddOnEnable);
		L.RegFunction("RemoveOnEnable", RemoveOnEnable);
		L.RegFunction("AddOnDisable", AddOnDisable);
		L.RegFunction("RemoveOnDisable", RemoveOnDisable);
		L.RegFunction("AddStart", AddStart);
		L.RegFunction("RemoveStart", RemoveStart);
		L.RegFunction("AddUpdate", AddUpdate);
		L.RegFunction("RemoveUpdate", RemoveUpdate);
		L.RegFunction("AddLateUpdate", AddLateUpdate);
		L.RegFunction("RemoveLateUpdate", RemoveLateUpdate);
		L.RegFunction("AddFixedUpdate", AddFixedUpdate);
		L.RegFunction("RemoveFixedUpdate", RemoveFixedUpdate);
		L.RegFunction("AddReset", AddReset);
		L.RegFunction("RemoveReset", RemoveReset);
		L.RegFunction("AddOnApplicationQuit", AddOnApplicationQuit);
		L.RegFunction("RemoveOnApplicationQuit", RemoveOnApplicationQuit);
		L.RegFunction("AddOnDestroy", AddOnDestroy);
		L.RegFunction("RemoveOnDestroy", RemoveOnDestroy);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("aAwakeFunc", get_aAwakeFunc, set_aAwakeFunc);
		L.RegVar("aOnEnableFunc", get_aOnEnableFunc, set_aOnEnableFunc);
		L.RegVar("aUpdateFunc", get_aUpdateFunc, set_aUpdateFunc);
		L.RegVar("aStartFunc", get_aStartFunc, set_aStartFunc);
		L.RegVar("aOnDisableFunc", get_aOnDisableFunc, set_aOnDisableFunc);
		L.RegVar("aLateUpdateFunc", get_aLateUpdateFunc, set_aLateUpdateFunc);
		L.RegVar("aFixedUpdateFunc", get_aFixedUpdateFunc, set_aFixedUpdateFunc);
		L.RegVar("aOnDestroyFunc", get_aOnDestroyFunc, set_aOnDestroyFunc);
		L.RegVar("aResetFunc", get_aResetFunc, set_aResetFunc);
		L.RegVar("aOnApplicationQuitFunc", get_aOnApplicationQuitFunc, set_aOnApplicationQuitFunc);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToCallLuaFunc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.ToCallLuaFunc(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddAwake(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAwake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveAwake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnEnable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddOnEnable(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveOnEnable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveOnEnable();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnDisable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddOnDisable(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveOnDisable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveOnDisable();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddStart(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddUpdate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddLateUpdate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveLateUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveLateUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddFixedUpdate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveFixedUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveFixedUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddReset(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveReset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveReset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnApplicationQuit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddOnApplicationQuit(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveOnApplicationQuit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveOnApplicationQuit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.AddOnDestroy(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveOnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaEvent obj = (LuaEvent)ToLua.CheckObject<LuaEvent>(L, 1);
			obj.RemoveOnDestroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aAwakeFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aAwakeFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aAwakeFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aOnEnableFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aOnEnableFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnEnableFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aUpdateFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aUpdateFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aUpdateFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aStartFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aStartFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aStartFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aOnDisableFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aOnDisableFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnDisableFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aLateUpdateFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aLateUpdateFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aLateUpdateFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aFixedUpdateFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aFixedUpdateFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aFixedUpdateFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aOnDestroyFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aOnDestroyFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnDestroyFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aResetFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aResetFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aResetFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_aOnApplicationQuitFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction ret = obj.aOnApplicationQuitFunc;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnApplicationQuitFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aAwakeFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aAwakeFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aAwakeFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aOnEnableFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aOnEnableFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnEnableFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aUpdateFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aUpdateFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aUpdateFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aStartFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aStartFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aStartFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aOnDisableFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aOnDisableFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnDisableFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aLateUpdateFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aLateUpdateFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aLateUpdateFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aFixedUpdateFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aFixedUpdateFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aFixedUpdateFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aOnDestroyFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aOnDestroyFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnDestroyFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aResetFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aResetFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aResetFunc on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_aOnApplicationQuitFunc(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaEvent obj = (LuaEvent)o;
			UnityEngine.Events.UnityAction arg0 = (UnityEngine.Events.UnityAction)ToLua.CheckDelegate<UnityEngine.Events.UnityAction>(L, 2);
			obj.aOnApplicationQuitFunc = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index aOnApplicationQuitFunc on a nil value");
		}
	}
}

