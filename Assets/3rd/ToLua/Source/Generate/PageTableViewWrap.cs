//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PageTableViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PageTableView), typeof(TableView));
		L.RegFunction("InitComponent", InitComponent);
		L.RegFunction("isFullShow", isFullShow);
		L.RegFunction("setUpdateNodeFunc", setUpdateNodeFunc);
		L.RegFunction("reloadData", reloadData);
		L.RegFunction("setData", setData);
		L.RegFunction("setDoLoadCallback", setDoLoadCallback);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_stepOffset", get_m_stepOffset, set_m_stepOffset);
		L.RegVar("m_maxStep", get_m_maxStep, set_m_maxStep);
		L.RegVar("m_startLoadingLength", get_m_startLoadingLength, set_m_startLoadingLength);
		L.RegVar("m_needPageUpLoad", get_m_needPageUpLoad, set_m_needPageUpLoad);
		L.RegVar("m_needPageDonwLoad", get_m_needPageDonwLoad, set_m_needPageDonwLoad);
		L.RegVar("m_loadingTips", get_m_loadingTips, set_m_loadingTips);
		L.RegVar("m_loadNodePrefab", get_m_loadNodePrefab, set_m_loadNodePrefab);
		L.RegVar("m_loadFont", get_m_loadFont, set_m_loadFont);
		L.RegVar("m_fontColor", get_m_fontColor, set_m_fontColor);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitComponent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
			obj.InitComponent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isFullShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
			bool o = obj.isFullShow();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setUpdateNodeFunc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.setUpdateNodeFunc(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int reloadData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
				obj.reloadData();
				return 0;
			}
			else if (count == 2)
			{
				PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.reloadData(arg0);
				return 0;
			}
			else if (count == 3)
			{
				PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.reloadData(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: PageTableView.reloadData");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.setData(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDoLoadCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			PageTableView obj = (PageTableView)ToLua.CheckObject<PageTableView>(L, 1);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.setDoLoadCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_stepOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			float ret = obj.m_stepOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_stepOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_maxStep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			int ret = obj.m_maxStep;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_maxStep on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_startLoadingLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			float ret = obj.m_startLoadingLength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_startLoadingLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_needPageUpLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			bool ret = obj.m_needPageUpLoad;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_needPageUpLoad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_needPageDonwLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			bool ret = obj.m_needPageDonwLoad;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_needPageDonwLoad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_loadingTips(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			string ret = obj.m_loadingTips;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_loadingTips on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_loadNodePrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			UnityEngine.GameObject ret = obj.m_loadNodePrefab;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_loadNodePrefab on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_loadFont(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			UnityEngine.Font ret = obj.m_loadFont;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_loadFont on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fontColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			UnityEngine.Color ret = obj.m_fontColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_fontColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_stepOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_stepOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_stepOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_maxStep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_maxStep = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_maxStep on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_startLoadingLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_startLoadingLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_startLoadingLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_needPageUpLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_needPageUpLoad = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_needPageUpLoad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_needPageDonwLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_needPageDonwLoad = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_needPageDonwLoad on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_loadingTips(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_loadingTips = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_loadingTips on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_loadNodePrefab(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_loadNodePrefab = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_loadNodePrefab on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_loadFont(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			UnityEngine.Font arg0 = (UnityEngine.Font)ToLua.CheckObject(L, 2, typeof(UnityEngine.Font));
			obj.m_loadFont = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_loadFont on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fontColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PageTableView obj = (PageTableView)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.m_fontColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_fontColor on a nil value");
		}
	}
}

