//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ZorderManager_ZOrderNodeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ZorderManager.ZOrderNode), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetRoot", SetRoot);
		L.RegFunction("updateRootChildZorders", updateRootChildZorders);
		L.RegFunction("isRoot", isRoot);
		L.RegFunction("getParent", getParent);
		L.RegFunction("getZorder", getZorder);
		L.RegFunction("getChilds", getChilds);
		L.RegFunction("addChild", addChild);
		L.RegFunction("removeChild", removeChild);
		L.RegFunction("SetLocalZOrder", SetLocalZOrder);
		L.RegFunction("SetGlobalZOrder", SetGlobalZOrder);
		L.RegFunction("getChildMaxLocalZorder", getChildMaxLocalZorder);
		L.RegFunction("ResetRoot", ResetRoot);
		L.RegFunction("SetToCurMaxLocalZorder", SetToCurMaxLocalZorder);
		L.RegFunction("DetachFromParent", DetachFromParent);
		L.RegFunction("isSetGlobal", isSetGlobal);
		L.RegFunction("clearGlobalZorder", clearGlobalZorder);
		L.RegFunction("SortChildByZorders", SortChildByZorders);
		L.RegFunction("setChildsZorders", setChildsZorders);
		L.RegFunction("updateNodeZorder", updateNodeZorder);
		L.RegFunction("GetCanvas", GetCanvas);
		L.RegFunction("Update", Update);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("localZorder", get_localZorder, set_localZorder);
		L.RegVar("m_isRoot", get_m_isRoot, set_m_isRoot);
		L.RegVar("m_beginZorder", get_m_beginZorder, set_m_beginZorder);
		L.RegVar("m_endZorder", get_m_endZorder, set_m_endZorder);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.SetRoot(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateRootChildZorders(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.updateRootChildZorders();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			bool o = obj.isRoot();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getParent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			ZorderManager.ZOrderNode o = obj.getParent();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getZorder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int o = obj.getZorder();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getChilds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			System.Collections.Generic.List<ZorderManager.ZOrderNode> o = obj.getChilds();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addChild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			ZorderManager.ZOrderNode arg0 = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 2);
			obj.addChild(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int removeChild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			ZorderManager.ZOrderNode arg0 = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 2);
			obj.removeChild(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLocalZOrder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetLocalZOrder(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGlobalZOrder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetGlobalZOrder(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getChildMaxLocalZorder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int o = obj.getChildMaxLocalZorder();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetRoot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.ResetRoot();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetToCurMaxLocalZorder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.SetToCurMaxLocalZorder();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DetachFromParent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.DetachFromParent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isSetGlobal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			bool o = obj.isSetGlobal();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int clearGlobalZorder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.clearGlobalZorder();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SortChildByZorders(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.SortChildByZorders();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setChildsZorders(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.setChildsZorders(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateNodeZorder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.updateNodeZorder(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCanvas(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			UnityEngine.Canvas o = obj.GetCanvas();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)ToLua.CheckObject<ZorderManager.ZOrderNode>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_localZorder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			int ret = obj.localZorder;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index localZorder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_isRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			bool ret = obj.m_isRoot;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_isRoot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_beginZorder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			int ret = obj.m_beginZorder;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_beginZorder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_endZorder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			int ret = obj.m_endZorder;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_endZorder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_localZorder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.localZorder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index localZorder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_isRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_isRoot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_isRoot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_beginZorder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_beginZorder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_beginZorder on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_endZorder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ZorderManager.ZOrderNode obj = (ZorderManager.ZOrderNode)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_endZorder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_endZorder on a nil value");
		}
	}
}

